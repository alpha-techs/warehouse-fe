name: Build
on:
  push:
    branches:
      - staging
      - develop
permissions:
  contents: read
  deployments: write
jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Install dependencies
        run: npm install

      - name: Build Development
        if: ${{ github.ref_name =='develop' }}
        run: npm run build-dev

      - name: Build Staging
        if: ${{ github.ref_name == 'staging' }}
        run: npm run build-stg

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          if-no-files-found: error
          retention-days: 1
          overwrite: true

  dockerize:
    runs-on: ubuntu-latest
    needs: package
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: debug
        run: ls -al dist

      - name: Build Docker image and push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: "linux/amd64,linux/arm64"
          tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:latest
          context: .
          secrets: |
            "version=${{ github.sha }}"
